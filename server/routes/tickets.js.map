{"version":3,"sources":["routes/tickets.ts"],"names":[],"mappings":"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","file":"routes/tickets.js","sourcesContent":["import express = require('express');\nvar router = express.Router();\n\n//db references\nimport mongoose = require('mongoose');\n\nimport ticketModel = require('../models/ticket');\n\nimport Ticket = ticketModel.Ticket;\n\n//utility function to check if user is authenticated\nfunction requireAuth(req: express.Request, res: express.Response, next: any){\n    //check if user is log in\n    if(!req.isAuthenticated()){\n        return res.redirect('/login');\n    }\n    next();\n}\n//utitlity to check ticket priority\nfunction checkPriority(urgency,impact){  \n    switch(urgency)\n    {\n        case 'LOW':\n            if(impact == 'LOW'){\n                return 5;\n            }else if(impact == 'MEDIUM'){\n                return 4;\n            }else if(impact == 'HIGH'){\n                return 3;\n            }\n            break;\n        case 'MEDIUM':\n            if(impact == 'LOW'){\n                return 4;\n            }else if(impact == 'MEDIUM'){\n                return 3;\n            }else if(impact == 'HIGH'){\n                return 2;\n            }\n            break;\n         case 'HIGH':\n            if(impact == 'LOW'){\n                return 3;\n            }else if(impact == 'MEDIUM'){\n                return 2;\n            }else if(impact == 'HIGH'){\n                return 1;\n            }\n            break;                     \n    }\n};\n//get tickets page\nrouter.get('/', requireAuth,(req:express.Request, res:express.Response, next: any) =>{\n    var typeUser = req.user ? req.user.type : '';\n    if( typeUser == 'Admin'){\n        //use the Ticket model to query the Tickets collection\n        Ticket.find({}).sort({'ticketPriority': 1}).exec(function(error, tickets){\n            if(error){\n                console.log(error);\n                res.end(error);\n            }\n            else {\n                //no error, list of tickets\n                res.render('tickets/index',{\n                    title: 'Dashboard',\n                    tickets : tickets,\n                    typeU: typeUser,\n                    type: req.user.type,\n                    displayName: req.user ? req.user.displayName : ''\n                });\n            }\n        });      \n    }\n    else{\n        res.redirect('/tickets/mytickets');\n    }\n});\n// GET my tickets\nrouter.get('/mytickets', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n\n    //var userId = '56ff1229fcd561a00b83d51f';\n    //var userId:String = req.user ? req.user.id : ''; \n    var userId = req.user ? req.user.username : ''; \n    \n    Ticket.find({'createdBy' : userId}).sort({'ticketPriority': 1}).exec((error, tickets) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            //show the edit view\n            res.render('tickets/mytickets', {\n                title: 'My Tickets',\n                tickets: tickets,\n                type: req.user.type, \n                displayName: req.user ? req.user.displayName : ''\n            });\n        }\n    });\n});\n\n// GET my tickets\nrouter.get('/closed', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n\n    //var userId = '56ff1229fcd561a00b83d51f';\n    //var userId:String = req.user ? req.user.id : ''; \n    var typeUser = req.user.type;\n    var userId = req.user ? req.user.username : ''; \n    if( typeUser == 'Admin'){\n        Ticket.find({'incidentNarrative.ticketStatus' : 'Closed'}).sort({'ticketPriority': 1}).exec((error, tickets) => {\n            if (error) {\n                console.log(error);\n                res.end(error);\n            }\n            else {\n                //show the edit view\n                res.render('tickets/mytickets', {\n                    title: 'Closed Tickets',\n                    tickets: tickets,\n                    type: req.user.type, \n                    displayName: req.user ? req.user.displayName : ''\n                });\n            }\n        });\n    }else {\n        res.redirect('/tickets');\n    }\n});\n\n// get add page\nrouter.get('/add', requireAuth,(req: express.Request, res: express.Response, next: any)=> {\n    res.render('tickets/add', {\n        title: 'Create New Ticket',\n        type: req.user.type,\n        displayName: req.user ? req.user.displayName : ''\n    });\n});\n\n// POST add page - save the new ticket\nrouter.post('/add', requireAuth, (req: express.Request, res: express.Response, next: any) => { \n    var createdBy = req.user ? req.user.username : ''; \n    var priority = checkPriority(req.body.ticketUrgency,req.body.ticketImpact);\n    Ticket.create({     \n        ticketTitle: req.body.ticketTitle,\n        createdBy: createdBy,\n        ticketDescription: req.body.ticketDescription,              \n        customerName: req.body.customerName,\n        customerPhone: req.body.customerPhone,\n        ticketUrgency: req.body.ticketUrgency,\n        ticketImpact: req.body.ticketImpact,\n        ticketPriority: priority, \n        incidentNarrative : \n            {comment : 'Ticket submitted'}       \n    }, function(error, Ticket) {\n        // did we get back an error or valid Ticket object?\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            res.redirect('/tickets');\n        }\n    })\n});\n// GET edit page - show the current ticket in the form\nrouter.get('/:id', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n    var id = req.params.id;\n    var typeUser = req.user ? req.user.type : '';\n    \n    if( typeUser == 'Admin'){\n        Ticket.findById(id, (error, Ticket) => {\n            if (error) {\n                console.log(error);\n                res.end(error);\n            }\n            else {\n                //show the edit view\n                res.render('tickets/edit', {\n                    title: 'Ticket Details',\n                    ticket: Ticket,\n                    typeU: typeUser,\n                    type: req.user.type,\n                    displayName: req.user ? req.user.displayName : ''\n                });\n            }\n        });\n    }\n    else{\n        Ticket.findById(id, (error, Ticket) => {\n            if (error) {\n                console.log(error);\n                res.end(error);\n            }\n            else {\n                //show the edit view\n                res.render('tickets/details', {\n                    title: 'Ticket Details',\n                    ticket: Ticket,\n                    typeU: typeUser,\n                    type: req.user.type,\n                    displayName: req.user ? req.user.displayName : ''\n                });\n            }\n        });\n    }\n});\n// POST edit page - update the selected ticket\nrouter.post('/:id', requireAuth,(req: express.Request, res: express.Response, next: any) => {\n    // grab the id from the url parameter\n    var id = req.params.id;\n    var priority = checkPriority(req.body.ticketUrgency,req.body.ticketImpact);\n    var urgency = req.body.ticketUrgency;\n    var impact = req.body.ticketImpact;\n    // create and populate a ticket object\n    var ticket = new Ticket({\n        _id: id,\n        ticketTitle: req.body.ticketTitle,\n        ticketDescription: req.body.ticketDescription,\n        ticketPriority: req.body.ticketPriority,\n        customerName: req.body.customerName,\n        customerPhone: req.body.customerPhone,\n        ticketStatus: req.body.ticketStatus,\n        incidentNarrative : [{\n            comment: req.body.comment\n        }],\n    });\n    var incidentComment = req.body.comment;\n    var incidentStatus = req.body.ticketStatus;\n    // run the update using mongoose and our model\n    Ticket.update({ _id: id},{$set:{ticketUrgency: urgency, ticketImpact: impact, ticketPriority:priority }}, error =>{\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n    });\n    // run the update using mongoose and our model\n    Ticket.update({ _id: id }, {$push: {incidentNarrative:{comment : incidentComment, ticketStatus :incidentStatus}}}, (error) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            //if success update\n            res.redirect('/tickets');\n        }\n    });\n});\n// make this public\nmodule.exports = router;"],"sourceRoot":"/source/"}